{"version":3,"sources":["logo.svg","AddComment.js","PersonCard.js","App.js","reportWebVitals.js","index.js"],"names":["AddComment","onCreate","input","defaultValue","useState","value","setValue","bind","onChange","event","target","clear","useInputValue","onSubmit","preventDefault","trim","placeholder","type","PersonCard","person","React","comments","setComments","className","name","birth_year","map","comment","text","concat","id","Date","now","App","people","setPeople","useEffect","fetch","then","response","json","results","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,mBCgBA,SAASA,EAAT,GAAiC,IAAZC,EAAW,EAAXA,SAC5BC,EAfR,WAA2C,IAApBC,EAAmB,uDAAJ,GAAI,EACdC,mBAASD,GADK,mBACjCE,EADiC,KAC1BC,EAD0B,KAGxC,MAAO,CACLC,KAAM,CACJF,QACAG,SAAU,SAAAC,GAAK,OAAIH,EAASG,EAAMC,OAAOL,SAE3CM,MAAO,kBAAML,EAAS,KACtBD,MAAO,kBAAMA,IAMDO,CAAc,IAW5B,OACE,uBAAMC,SAVR,SAAuBJ,GACrBA,EAAMK,iBAEFZ,EAAMG,QAAQU,SAChBd,EAASC,EAAMG,SACfH,EAAMS,UAKR,UACE,mCAAOK,YAAY,WAAcd,EAAMK,OACvC,wBAAQU,KAAK,SAAb,uBC5BS,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,OAAS,EACXC,IAAMhB,SAAS,IADJ,mBACpCiB,EADoC,KAC1BC,EAD0B,KAU3C,OACE,sBAAKC,UAAU,cAAf,UACE,6BAAKJ,EAAOK,OACZ,4BAAIL,EAAOM,aACVJ,EAASK,KAAI,SAAAC,GAAO,OAAK,4BAAIA,EAAQC,UACtC,cAAC5B,EAAD,CAAYC,SAZhB,SAAiB2B,GACfN,EAAYD,EAASQ,OAAO,CAAC,CAC3BD,OACAE,GAAIC,KAAKC,gBCgBAC,MApBf,WAAgB,IAAD,EACeb,IAAMhB,SAAS,IAD9B,mBACN8B,EADM,KACEC,EADF,KAWb,OARAC,qBAAU,WACRC,MAAM,iCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAJ,GACJC,EAAUD,EAAOO,cAEpB,IAGD,qBAAKlB,UAAU,MAAf,SACGW,EAAOR,KAAI,SAAAP,GAAM,OAChB,cAACD,EAAD,CAAYC,OAAQA,GAAaA,EAAOK,YCPjCkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0723ce11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react';\n\nfunction useInputValue(defaultValue = '') {\n  const [value, setValue] = useState(defaultValue);\n\n  return {\n    bind: {\n      value,\n      onChange: event => setValue(event.target.value)\n    },\n    clear: () => setValue(''),\n    value: () => value\n  }\n}\n\n\nexport default function AddComment({onCreate}) {\n  const input = useInputValue('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n    \n    if (input.value().trim()) {\n      onCreate(input.value());\n      input.clear();\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <input placeholder=\"comment\" {...input.bind}/>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}","import React, { useState } from 'react';\nimport AddComment from './AddComment';\n\nexport default function PersonCard({person}) {\n  const [comments, setComments] = React.useState([]);\n\n  function addComm(text) {\n    setComments(comments.concat([{\n      text,\n      id: Date.now(),\n    }]));\n  }\n\n  return (\n    <div className=\"person-card\">\n      <h2>{person.name}</h2>\n      <p>{person.birth_year}</p>\n      {comments.map(comment => (<p>{comment.text}</p>))}\n      <AddComment onCreate={addComm}/>\n    </div>\n  )\n}","import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport PersonCard from './PersonCard';\n\nfunction App() {\n  const [people, setPeople] = React.useState([]);\n\n  useEffect(() => {\n    fetch('https://swapi.dev/api/people/')\n      .then(response => response.json())\n      .then(people => {\n        setPeople(people.results);\n      })\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {people.map(person => (\n        <PersonCard person={person} key={person.name}/>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}